History
-------

The following sections outline Oracle Tools project changes in
reverse chronological order.

<h3>Version ${project.version}: ${timestamp} </h3>

<h4>Source and Documentation Contributors</h4>

*   Jonathan Knight, Paul Makin, Brian Oliver, Patrick Peralta

<h4>Global and Cross-Module Changes</h4>

*   [ORACLETOOLS-25](https://java.net/jira/browse/ORACLETOOLS-25): Upgrade Project
    Parent POM to Version 4.

*   [ORACLETOOLS-31](https://java.net/jira/browse/ORACLETOOLS-31): Upgrade GitHub
    Maven Site Plugin to Version 0.8.

<h4>oracle-tools-all</h4>

*   [ORACLETOOLS-34](https://java.net/jira/browse/ORACLETOOLS-34): Introduced to
    provide a single distribution of Oracle Tools.

<h4>oracle-tools-core</h4>

*   [ORACLETOOLS-14](https://java.net/jira/browse/ORACLETOOLS-14): Removed Notified
    Deferred implementation as by nature they are unreliable.

<h4>oracle-tools-runtime</h4>

*   [ORACLETOOLS-12](https://java.net/jira/browse/ORACLETOOLS-12): Resolved issue
    when Native processes would fail to execute due to timing and class-path
    issues (on Windows Platforms).

*   [ORACLETOOLS-13](https://java.net/jira/browse/ORACLETOOLS-13): Resolved issue
    Oracle Tools virtualization would fail to run when classpaths contain
    whitespace (on Windows Platforms).

*   [ORACLETOOLS-21](https://java.net/jira/browse/ORACLETOOLS-21): Refactored
    and renamed Virtualization package and associated Virtualizeed Application,
    Virtualized Process and Virtualize Builders to be themed as being
    "ContainerBased".   This was to clear up possible confusion when running
    Native applications on Virtualized infrastructure.  As part of this work we
    also renamed ExternalJavaApplicationBuilder to be a NativeJavaApplicationBuilder.

*   [ORACLETOOLS-26](https://java.net/jira/browse/ORACLETOOLS-26): Refactored
    the ApplicationConsole interfaces and implementations to allow separate
    control of stdout, stderr and stdin.

*   [ORACLETOOLS-27](https://java.net/jira/browse/ORACLETOOLS-27): Introduced
    the concept of "diagnostics" to provide application life-cycle information
    without requiring redirection of ApplicationConsoles.

*   [ORACLETOOLS-28](https://java.net/jira/browse/ORACLETOOLS-28): Introduced
    the ability to enable remote Java debugging (when using Java-based Application
    Schemas) for Native Java Applications.

*   [ORACLETOOLS-29](https://java.net/jira/browse/ORACLETOOLS-29): Resolved issue
    where the names of Applications created as part of an Group start at 0 instead
    of 1.

*   [ORACLETOOLS-30](https://java.net/jira/browse/ORACLETOOLS-30): Resolves issue
    where Native Windows NT / XP processes may hang when being destroyed.

*   [ORACLETOOLS-32](https://java.net/jira/browse/ORACLETOOLS-32): ApplicationSchemas
    now *default* to inheriting environment variables from the underlying process.

*   [ORACLETOOLS-36](https://java.net/jira/browse/ORACLETOOLS-36): Resolves issues
    where having spaces in a System Property may cause a Native Java application not
    to start.

*   [ORACLETOOLS-37](https://java.net/jira/browse/ORACLETOOLS-37): Renamed and refactored
    PropertiesBuilder.fromCurrentSystemProperties to return only custom properties.
    The new method is called PropertiesBuilder.fromCurrentNonStandardSystemProperties.

<h4>oracle-tools-runtime-tests</h4>

*   Introduced to encapsulate Functional and Integration Tests.

<h4>oracle-tools-testing-support</h4>

*   No Changes.

<h4>oracle-tools-coherence</h4>

*   [ORACLETOOLS-2](https://java.net/jira/browse/ORACLETOOLS-2): Resolved issue
    when DeferredAssert would hang (wait for a long time) when querying an MBean
    for a crashed server.

*   [ORACLETOOLS-4](https://java.net/jira/browse/ORACLETOOLS-2): Resolved issue
    when calling "eventually" on a non existent MBean would hang forever
    (wait for a long time).

*   [ORACLETOOLS-10](https://java.net/jira/browse/ORACLETOOLS-10): Add support for
    specifying a log destination for Coherence when using a Coherence-based MemeberSchema.

*   [ORACLETOOLS-35](https://java.net/jira/browse/ORACLETOOLS-35): Add automatic support
    enabling file-base XSD loading with Coherence using Java 8 (b91+) that includes
    JAXP 1.5 changes.

<h4>oracle-tools-coherence-tests</h4>

*   Introduced to encapsulate Functional and Integration Tests.

<h4>oracle-tools-coherence-testing-support</h4>

*   [ORACLETOOLS-19](https://java.net/jira/browse/ORACLETOOLS-19): Introduced
    an AbtractCoherenceTest to support Coherence Test isolation.


--------------------------------------------------------------------------------

<h3>Version 0.0.8 @ 2013-02-26 13:12 </h3>

<h4>Global and Cross-Module Changes</h4>

*   Initial Release based on work from The Oracle Coherence Incubator.

<h4>oracle-tools-core</h4>

*   Defines Core and Shared Interfaces, Classes and Resources.

<h4>oracle-tools-runtime</h4>

*   Defines Runtime Process Management infrastructure.

<h4>oracle-tools-testing-support</h4>

*   Defines JUnit Testing Extensions for Deferred Resources.

<h4>oracle-tools-coherence</h4>

*   Defines Extensions to manage Oracle Coherence Runtimes.
